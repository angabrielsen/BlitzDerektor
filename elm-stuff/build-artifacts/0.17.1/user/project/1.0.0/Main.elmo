var _user$project$Main$mainGrid = A2(
	_debois$elm_mdl$Material_Grid$grid,
	_elm_lang$core$Native_List.fromArray(
		[
			A2(_debois$elm_mdl$Material_Options$css, 'width', '100%')
		]),
	_elm_lang$core$Native_List.fromArray(
		[
			A2(
			_debois$elm_mdl$Material_Grid$cell,
			_elm_lang$core$Native_List.fromArray(
				[
					A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 6)
				]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_debois$elm_mdl$Material_Options$div,
					_elm_lang$core$Native_List.fromArray(
						[
							A2(_debois$elm_mdl$Material_Options$css, 'min-height', '75vh')
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							A2(
							_debois$elm_mdl$Material_Options$img,
							_elm_lang$core$Native_List.fromArray(
								[
									A2(_debois$elm_mdl$Material_Options$css, 'max-width', '100%')
								]),
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html_Attributes$src('/assets/images/template.png')
								]))
						]))
				])),
			A2(
			_debois$elm_mdl$Material_Grid$cell,
			_elm_lang$core$Native_List.fromArray(
				[
					A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 6)
				]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_debois$elm_mdl$Material_Options$div,
					_elm_lang$core$Native_List.fromArray(
						[
							_debois$elm_mdl$Material_Color$background(
							A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Teal, _debois$elm_mdl$Material_Color$S50)),
							A2(_debois$elm_mdl$Material_Options$css, 'min-height', '70%')
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html$text('hi')
						])),
					A2(
					_debois$elm_mdl$Material_Options$div,
					_elm_lang$core$Native_List.fromArray(
						[
							_debois$elm_mdl$Material_Color$background(
							A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Pink, _debois$elm_mdl$Material_Color$S50)),
							A2(_debois$elm_mdl$Material_Options$css, 'min-height', '30%')
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html$text('bye')
						]))
				]))
		]));
var _user$project$Main$viewBody = function (model) {
	return _debois$elm_mdl$Material_Scheme$top(_user$project$Main$mainGrid);
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		return A2(_debois$elm_mdl$Material$update, _p0._0, model);
	});
var _user$project$Main$model = {mdl: _debois$elm_mdl$Material$model};
var _user$project$Main$Model = function (a) {
	return {mdl: a};
};
var _user$project$Main$Mdl = function (a) {
	return {ctor: 'Mdl', _0: a};
};
var _user$project$Main$view = function (model) {
	return A4(
		_debois$elm_mdl$Material_Layout$render,
		_user$project$Main$Mdl,
		model.mdl,
		_elm_lang$core$Native_List.fromArray(
			[_debois$elm_mdl$Material_Layout$fixedHeader]),
		{
			header: _elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$html$Html$h1,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Attributes$style(
							_elm_lang$core$Native_List.fromArray(
								[
									{ctor: '_Tuple2', _0: 'padding', _1: '10px 5px'},
									{ctor: '_Tuple2', _0: 'margin', _1: '0px'}
								]))
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html$text('BlitzDerektor')
						]))
				]),
			drawer: _elm_lang$core$Native_List.fromArray(
				[]),
			tabs: {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_List.fromArray(
					[]),
				_1: _elm_lang$core$Native_List.fromArray(
					[])
			},
			main: _elm_lang$core$Native_List.fromArray(
				[
					_user$project$Main$viewBody(model)
				])
		});
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: {ctor: '_Tuple2', _0: _user$project$Main$model, _1: _elm_lang$core$Platform_Cmd$none},
			view: _user$project$Main$view,
			subscriptions: _elm_lang$core$Basics$always(_elm_lang$core$Platform_Sub$none),
			update: _user$project$Main$update
		})
};
